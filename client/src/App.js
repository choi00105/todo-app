import { useState, useRef, useEffect } from 'react';
import axios from 'axios';
import Todo from './components/Todo';
import AddTodo from './components/AddTodo';

// import './styles/SassDh.scss';
import './styles/App.scss'


const App = () => {
  const [todoItems, setTodoItems] = useState([]);
  // const todoId = useRef(4); //useRefÎ•º Î°úÏª¨Î≥ÄÏàò(ÎûúÎçîÎßÅ ÎêòÏñ¥ÎèÑ Í∞íÏù¥ Ïú†ÏßÄÎê®)Î°ú ÏÇ¨Ïö© -> dbÎûë Ïó∞Í≤∞Îêú ÎäêÎÇåÏùÑÏ§å -> dbÏó∞Í≤∞ ÌïòÎ©¥ ÏßÄÏõå

  useEffect(() => {
    console.log('first rendering complete');
    const getTodos = async () => {
      let res = await axios.get('http://localhost:8081/todos');
      console.log(res);
      console.log(res.data[0]);
      setTodoItems(res.data);
    };

    getTodos();
  }, []) //ÎπàÎ∞∞Ïó¥ÏùÑ Î∂àÎü¨Ïò¥

// AddTodo Ïª¥Ìè¨ÎÑåÌä∏Îäî ÏÉÅÏúÑ Ïª¥Ìè¨ÎÑåÌä∏(App)Ïùò todoItems(state)Ïóê Ï†ëÍ∑º Î∂àÍ∞ÄÎä•
// ÏÉÅÏúÑ Ïª¥Ìè¨ÎÑåÌä∏(App)ÏùÄ AddTodo Ïª¥Ìè¨ÎÑåÌä∏ Ï†ëÍ∑º Í∞ÄÎä•
// => App Ïª¥Ìè¨ÎÑåÌä∏Ïóê addItem() Ìï®ÏàòÎ•º Ï†ïÏùòÌïòÍ≥†, Ìï¥Îãπ Ìï®ÏàòÎ•º AddTodo propsÎ°ú ÎÑòÍ≤®Ïïº Ìï®

  // const addItem = (newItem) => {
  const addItem = async (newItem) => {
    // axios.post(url, data)

    console.log(newItem) // {title: 'ÏûÖÎ†µÍ∞í'}
    let add = await axios.post('http://localhost:8081/todo', newItem);
    console.log(add.data);

    // [back Ïó∞Í≤∞ Ï†Ñ]
    // newItem.id = todoId.current++; // ÌÇ§Î•º ÏúÑÌïú id ÏÑ§Ï†ï
    // newItem.done = false; // done Ï¥àÍ∏∞Ìôî
    // Í∏∞Ï°¥ todoItemsÎ•º Ïú†ÏßÄÌïòÍ≥†, ÏÉàÎ°úÏö¥ newItemÏùÑ Ï∂îÍ∞Ä
    // setTodoItems([...todoItems, newItem]); // setTodoItems(todoItems.concat(newItem))

    setTodoItems([...todoItems, add.data]); // setTodoItems(todoItems.concat(newItem))
  };

  // Ï†ÑÏ≤¥ Todo Î¶¨Ïä§Ìä∏(todoItems)Îäî App Ïª¥Ìè¨ÎÑåÌä∏ÏóêÏÑú Í¥ÄÎ¶¨ÌïòÍ≥† ÏûàÏúºÎØÄÎ°ú
  // delItem() Ìï®ÏàòÎäî App Ïª¥Ìè¨ÎÑåÌä∏Ïóê ÏûëÏÑ±Ìï¥ÏïºÌï®
  const delItem = async (targetItem) => {
    console.log(targetItem.id);
    // filter method Ïù¥Ïö©
    let del = await axios.delete(`http://localhost:8081/todo/${targetItem.id}` );
    console.log('Î≥¥Ïó¨Ï§ò', del);
    
    let newtodoItems = todoItems.filter((item) => targetItem.id !== item.id );
    console.log('newtodo', newtodoItems);
    setTodoItems(newtodoItems);
  };

  // APIÎ•º Ïù¥Ïö©Ìï¥ÏÑú updateÌïòÎ†§Î©¥
  // (1) server/routes/todo.js APIÎ•º Ïù¥Ïö©Ìï¥ ÏÑúÎ≤Ñ Îç∞Ïù¥ÌÑ∞Î•º ÏóÖÎç∞Ïù¥Ìä∏ Ìïú ÌõÑ
  // (2) Î≥ÄÍ≤ΩÎêú ÎÇ¥Ïö©ÏùÑ ÌôîÎ©¥Ïóê Îã§Ïãú Ï∂úÎ†•ÌïòÎäî ÏûëÏóÖ
  const updateItem = async (targetItem) => {
    console.log(targetItem);
    await axios.patch(`http://localhost:8081/todo/${targetItem.id}`,targetItem)
  }

  return (
    <div className="App">
      {/* {console.log('todoItems', todoItems)} */}
      {/* {console.log(todoItems[0])} */}
      
      <header className="header">üëç‚úåÔ∏èMy Todo App</header>

      <div className='section'>
      <AddTodo
        addItem={addItem}
      ></AddTodo>
      <div className="left-todos">üöÄ {todoItems.length==1?'1 Todo':todoItems.length>0?todoItems.length+' Todos':'Todo is blank'}</div>

      {todoItems.map((item) => {
        // console.log(item); // {id: 1, title: 'My Todo1', done: false}
        return <Todo key={item.id} item={item} delItem={delItem} updateItem={updateItem}></Todo>;
      })}
      </div>
    </div>
  );
};

export default App;